image: ondrejsika/ci

stages:
  - check
  - build
  - deploy dev
  - deploy prod

variables:
  IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

.go format check:
  image: golang:1.14
  stage: check
  script:
    - diff -u <(echo -n) <(gofmt -d ./)

.editorconfig check:
  image: mstruebing/editorconfig-checker
  stage: check
  script:
    - ec

.build: &build
  stage: build
  image: golang:1.14
  script:
    - go build -o hello .
  artifacts:
    paths:
      - hello

.build linux:
  <<: *build

.build mac:
  <<: *build
  variables:
    GOOS: darwin

.build windows:
  <<: *build
  variables:
    GOOS: windows

build docker:
  stage: build
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker build -t $IMAGE .
    - docker push $IMAGE

.deploy: &deploy
  script:
    - helm repo add ondrejsika https://helm.oxs.cz
    - helm upgrade --install -n default
      dev-$RELEASE ondrejsika/one-image
      --set image=$IMAGE
      --set host=$HOST

.stop: &stop
  when: manual
  variables:
    GIT_STRATEGY: none
  script:
    - helm uninstall $RELEASE -n default

.dev: &dev
  stage: deploy dev
  variables:
    RELEASE: $CI_COMMIT_REF_SLUG
    HOST: $CI_COMMIT_REF_SLUG.k8s.sikademo.com

.prod: &prod
  when: manual
  stage: deploy prod
  only:
    - master
  variables:
    RELEASE: production
    HOST: production.k8s.sikademo.com

deploy dev:
  <<: *deploy
  <<: *dev
  environment:
    name: dev/$CI_COMMIT_REF_SLUG
    url: https://$CI_COMMIT_REF_SLUG.k8s.sikademo.com
    on_stop: stop dev

stop dev:
  <<: *stop
  <<: *dev
  environment:
    name: dev/$CI_COMMIT_REF_SLUG
    action: stop

deploy prod:
  <<: *deploy
  <<: *prod
  environment:
    name: prod
    url: https://production.k8s.sikademo.com
    on_stop: stop prod

stop prod:
  <<: *stop
  <<: *prod
  environment:
    name: prod
    action: stop
